#date: 2024-07-02T16:49:34Z
#url: https://api.github.com/gists/27367cadfff22a99a017be37f95c1bc7
#owner: https://api.github.com/users/lcatlett

#!/bin/bash
# Runs tasks to deploy code from Pantheon dev -> test environment including:
#   - Race condition handling for workflows, terminus commands, and git commands
#   - Configuration of environment variables commonly required in enterprise deployment scripts
#   - Logging of failed site deployments for automatic retries
# Usage:
# ./deploy-test <site-name or uuid> <environment>
#
# ###

SITE=$1
ENV=$2
current_dir=$3
DEV=$(echo "${SITE}.dev")
TEST=$(echo "${SITE}.test")
LIVE=$(echo "${SITE}.live")

START=$SECONDS

echo -e "Starting ${SITE} code deployment to Pantheon ${ENV} environment from Dev" | sed "s/^/[$SITE] /" >>"${current_dir}/logs/deploy-$ENV.log"

# Basic code deploy from Pantheon dev -> test environment
function code_deploy() {
    # Deploy code to Pantheon environment
    echo "Deploying code from Pantheon dev to $ENV environment"
    terminus env:deploy $TEST --cc -n -q

    # if the push fails with a non-zero exit code, add the site to the failed-sites-<env>.txt file
    if [[ "$?" -ne 0 ]]; then
        echo "Code push failed for $SITE.$ENV"
        echo "[code] $SITE" >>"${current_dir}/logs/failed-sites-$ENV.txt"
    fi
}

code_deploy 2>&1 | sed "s/^/[$SITE] /" >>"${current_dir}/logs/deploy-$ENV.log"

# if any of the functions above fail, the code deployment has failed. Add the site to the failed-sites-<env>.txt file.
if [[ $? -eq 0 ]]; then
    echo "Code deploy tasks successful for $SITE.$ENV" | sed "s/^/[$SITE] /" >>"${current_dir}/logs/deploy-$ENV.log"
    # if the site was
    if [[ -f "${current_dir}/logs/failed-sites-$ENV.txt" ]]; then
        sed -i "/$SITE/d" "${current_dir}/logs/failed-sites-$ENV.txt"
    fi
else
    echo "Code deploy tasks failed for $SITE.$ENV" | sed "s/^/[$SITE] /" >>"${current_dir}/logs/deploy-$ENV.log"
    echo "[code] $SITE" >>"${current_dir}/logs/failed-sites-$ENV.txt"
fi

# Report time to results.
DURATION=$((SECONDS - START))
TIME_DIFF=$(bc <<<"scale=2; $DURATION / 60")
MIN=$(printf "%.2f" $TIME_DIFF)
echo -e "Finished dev -> test code deploy tasks ${SITE} in ${MIN} minutes" | sed "s/^/[$SITE] /" >>"${current_dir}/logs/deploy-$ENV.log"
