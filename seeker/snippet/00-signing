#date: 2023-01-06T16:58:10Z
#url: https://api.github.com/gists/cd0bc302cb0a8bf030e4fe006935c6ff
#owner: https://api.github.com/users/d4rklynk

#!/bin/sh

set -e

KERNEL_IMAGE="$2"
MOK_DIRECTORY="/var/lib/shim-signed/mok"

if [ "$#" -ne "2" ] ; then
	echo "Wrong count of command line arguments. This is not meant to be called directly." >&2
	exit 1
fi

if [ ! -x "$(command -v sbsign)" ] ; then
	echo "sbsign not executable. Bailing." >&2
	exit 1
fi


if [ ! -r "$MOK_DIRECTORY/MOK.der" ] ; then
	echo "$MOK_DIRECTORY/MOK.der is not readable." >&2
	exit 1
fi

if [ ! -r "$MOK_DIRECTORY/MOK.priv" ] ; then
	echo "$MOK_DIRECTORY/MOK.priv is not readable." >&2
	exit 1
fi

if [ ! -w "$KERNEL_IMAGE" ] ; then
	echo "Kernel image $KERNEL_IMAGE is not writable." >&2
	exit 1
fi

if [ ! -r "$MOK_DIRECTORY/MOK.pem" ] ; then
	echo "MOK.pem missing. Generating from MOK.der."
	if [ ! -x "$(command -v openssl)" ] ; then
		echo "openssl could not be found. Bailing." >&2
		exit 1
	fi

	openssl x509 -in "$MOK_DIRECTORY/MOK.der" -inform DER -outform PEM -out "$MOK_DIRECTORY/MOK.pem" || { echo "Conversion failed. Bailing." >&2; exit 1 ; }
fi

echo "Signing $KERNEL_IMAGE..."
sbsign --key "$MOK_DIRECTORY/MOK.priv" --cert "$MOK_DIRECTORY/MOK.pem" --output "$KERNEL_IMAGE" "$KERNEL_IMAGE"