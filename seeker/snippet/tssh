#date: 2023-10-23T16:53:23Z
#url: https://api.github.com/gists/6c045f431a83251b2f849ccae820b2db
#owner: https://api.github.com/users/der--flo

#!/usr/bin/env python3

from simple_term_menu import TerminalMenu
import os
import json
import subprocess
import sys

username = 'root' # username that should be used for ssh

tailscale_proc = subprocess.run(
    ["tailscale", "status", "--self", "--json"],
    capture_output=True,
)

if tailscale_proc.returncode != 0:
    print("Unable to get tailscale status, please check tailscaled.")
    sys.exit(0)

tailscale_output_json = json.loads(tailscale_proc.stdout)

inventory = {
    "all": {"hosts": []},
    "online": {"hosts": []},
    "offline": {"hosts": []},
}

all_hosts = list(
    tailscale_output_json["Peer"].values(),
)

for v in all_hosts:
    #skip funnels
    if v["HostName"] == "funnel-ingress-node":
        continue

    #skip clients
    if "client" in v["DNSName"]:
        continue

    inventory["all"]["hosts"].append(v["DNSName"].split('.', 1)[0])

    if v["Online"]:
        inventory["online"]["hosts"].append(v["DNSName"].split('.', 1)[0])
    else:
        inventory["offline"]["hosts"].append(v["DNSName"].split('.', 1)[0])

options = inventory["online"]["hosts"] # online / offline / all
options.sort()

def main():
    terminal_menu = TerminalMenu(options)
    menu_entry_index = terminal_menu.show()
    if menu_entry_index: # catch menu exit (ctrl-c, q, esc)
        host = options[menu_entry_index]
        os.system('ssh -o StrictHostKeyChecking=no ' + username + '@' + host)
    else:
        sys.exit(0)

if __name__ == "__main__":
    main()
