#date: 2022-09-16T21:46:34Z
#url: https://api.github.com/gists/d35af5ea1548313e7cf1730ae7ec6902
#owner: https://api.github.com/users/chrisgarcia001

# Units of each product available at each depot
depot_product_availabilities = {'D1':{'P1':3, 'P2': 5, 'P3': 3, 'P4':0},
                                'D2':{'P1':2, 'P2': 4, 'P3': 0, 'P4':4}}

# The volume (cubic feet) required per unit of each product
product_volumes = {'P1':12, 'P2':8, 'P3':9, 'P4':16}

# Truck data (capacity is cubic feet available).
trucks = {'T1':{'base':'D1', 'capacity':50, 'cost_per_mile':0.47}, 
          'T2':{'base':'D1', 'capacity':40, 'cost_per_mile':0.41}, 
          'T3':{'base':'D2', 'capacity':30, 'cost_per_mile':0.35},
          'T4':{'base':'D2', 'capacity':90, 'cost_per_mile':0.55}}

# Number of units of each product ordered by each customer.
customer_orders = {'C1':{'P1':0, 'P2':1, 'P3':1, 'P4':0},
                   'C2':{'P1':0, 'P2':0, 'P3':0, 'P4':1},
                   'C3':{'P1':1, 'P2':0, 'P3':0, 'P4':0},
                   'C4':{'P1':0, 'P2':0, 'P3':0, 'P4':2},
                   'C5':{'P1':2, 'P2':0, 'P3':0, 'P4':0},
                   'C6':{'P1':0, 'P2':2, 'P3':1, 'P4':0},
                   'C7':{'P1':0, 'P2':1, 'P3':1, 'P4':0},
                   'C8':{'P1':1, 'P2':1, 'P3':0, 'P4':0}}

# Labels for trucks, depots, customers, and products.
truck_labels = sorted(trucks.keys())
depot_labels = sorted(depot_product_availabilities.keys())
customer_labels = sorted(customer_orders.keys())
product_labels = sorted(product_volumes.keys())

# These is the scenario node (i.e., locations of depots and customers) data, initially generated by the Veroviz sketch tool. 
# The leafletIconType was then manually set to 'home' for depot nodes and 'star' for customer nodes.
nodesArray = [ 
    {'id': 0, 'lat': 38.3064174, 'lon': -77.5188606, 'altMeters': 0.0, 'nodeName': 'D1', 'nodeType': 'Depot', 'popupText': 'D1', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'home', 'leafletColor': 'blue', 'leafletIconText': '0', 'cesiumIconType': 'pin', 'cesiumColor': 'blue', 'cesiumIconText': '0', 'elevMeters': None},
    {'id': 1, 'lat': 38.1876887, 'lon': -77.619984, 'altMeters': 0.0, 'nodeName': 'D2', 'nodeType': 'Depot', 'popupText': 'D2', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'home', 'leafletColor': 'blue', 'leafletIconText': '1', 'cesiumIconType': 'pin', 'cesiumColor': 'blue', 'cesiumIconText': '1', 'elevMeters': None},
    {'id': 2, 'lat': 38.2510008, 'lon': -77.5844244, 'altMeters': 0.0, 'nodeName': 'C1', 'nodeType': 'Customer', 'popupText': 'C1', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '2', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '2', 'elevMeters': None},
    {'id': 3, 'lat': 38.3494599, 'lon': -77.6573983, 'altMeters': 0.0, 'nodeName': 'C2', 'nodeType': 'Customer', 'popupText': 'C2', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '3', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '3', 'elevMeters': None},
    {'id': 4, 'lat': 38.3706877, 'lon': -77.5007117, 'altMeters': 0.0, 'nodeName': 'C3', 'nodeType': 'Customer', 'popupText': 'C3', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '4', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '4', 'elevMeters': None},
    {'id': 5, 'lat': 38.3199284, 'lon': -77.4104575, 'altMeters': 0.0, 'nodeName': 'C4', 'nodeType': 'Customer', 'popupText': 'C4', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '5', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '5', 'elevMeters': None},
    {'id': 6, 'lat': 38.1691186, 'lon': -77.8724912, 'altMeters': 0.0, 'nodeName': 'C5', 'nodeType': 'Customer', 'popupText': 'C5', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '6', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '6', 'elevMeters': None},
    {'id': 7, 'lat': 38.5123587, 'lon': -78.0333479, 'altMeters': 0.0, 'nodeName': 'C6', 'nodeType': 'Customer', 'popupText': 'C6', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '7', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '7', 'elevMeters': None},
    {'id': 8, 'lat': 38.4804832, 'lon': -77.4413181, 'altMeters': 0.0, 'nodeName': 'C7', 'nodeType': 'Customer', 'popupText': 'C7', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '8', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '8', 'elevMeters': None},
    {'id': 9, 'lat': 38.5125157, 'lon': -77.7038413, 'altMeters': 0.0, 'nodeName': 'C8', 'nodeType': 'Customer', 'popupText': 'C8', 'leafletIconPrefix': 'glyphicon', 'leafletIconType': 'star', 'leafletColor': 'orange', 'leafletIconText': '9', 'cesiumIconType': 'pin', 'cesiumColor': 'orange', 'cesiumIconText': '9', 'elevMeters': None},
]
nodesDF = pd.DataFrame(nodesArray)

# Below: This is how to get the raw distance and travel time matrices from
# Veroviz. Uncomment these lines and comment out the one afterward if
# you wish to get it directly from Veroviz.
[time, dist] = vrv.getTimeDist2D(nodes           = nodesDF,
                                 matrixType      = 'all2all',
                                 routeType       = 'fastest',
                                 dataProvider    = 'OSRM-online',
                                 outputDistUnits = 'miles')

# This is the "Big M" in linear programming terminology - a large constant
# used to impose prohibitively high costs on infeasible choices.
BIG_M = 9999.9 

# Set distances from each node to itself as BIG_M to ensure these paths are 
# never taken.
dist = {(nodesArray[i]['nodeName'], nodesArray[j]['nodeName']):dist[i,j] if i != j else BIG_M
          for i in range(len(nodesArray)) for j in range(len(nodesArray))}

# View the nodes on a map - blue/home markers are depots and orange/star markers are customers.
vrv.createLeaflet(nodes=nodesDF, mapBackground='Arcgis Topo')