#date: 2022-02-15T16:59:59Z
#url: https://api.github.com/gists/353927411d3bc2cf6aa6734e949ec33f
#owner: https://api.github.com/users/marcoradocchia

#!/usr/bin/env sh

# backscript: simple posix compliant script to simplify and  automate home
# directory bakcup process; it has been thought to be run at startup or through
# a cronjob
# Copyright (C) 2022  Marco Radocchia
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see https://www.gnu.org/licenses/gpl-3.0.html.

# This script requires the following dependencies:
# - bc (in order to do posix compliant calculations)
# - kdialog (in order to display dialogs)

# This script can be run as non root user, it does not require admin privileges

BACKUP_FREQ=7  # backup frequency in days
BACKUP_HIST=$HOME/.local/share/backup_hist
TODAY=$(date +%F)

# check if backup_hist file exists, inizilize it
[ ! -f $BACKUP_HIST ] && echo 2000-01-01 > $BACKUP_HIST
last_backup=$(tail -n 1 $BACKUP_HIST)

# last backup was less than 7 days ago, so no further backup needed
[ $(echo "( $(date -d "$TODAY" "+%s")\
  - $(date -d "$last_backup" "+%s") ) / 86400" | bc) -lt $BACKUP_FREQ ] && exit

kdialog --title "Backup" --warningcontinuecancel "It's time to backup your \
sistem bubbola! Would you like to proceede?\nP.S. Ti amacchio!"\
  --continue-label "Backup now" --cancel-label "Maybe later"
# cancel hit in kdialog -> no backup
[ $? -eq 1 ] && exit
kdialog --title "Backup" --passivepopup "Backup started...\n\
  You'll get notified when it's done!"

# backup file name
backup_file=/tmp/backup_$(echo $TODAY | tr '-' '_').tar.gz

# actually creating the backup archive,
# see: https://help.ubuntu.com/community/BackupYourSystem/TAR
# storing backup temporarly in /tmp
# WARNING: modify this command as needed
tar -cpzf $backup_file\
  --exclude=$HOME/.cache\
  --exclude=$HOME/.local/share/Steam\
  --one-file-system $HOME > /dev/null 2>&1

# check if backup archive was properly created
[ ! -f $backup_file ] && kdialog --error\
  "Something went wrong... Please report this issue to Gianni!" && exit

# chose directory dialog to let the user decide where to store the backup
# archive; if cancel is hitten, abort backup confirmation is asked
# if backup is aborted, temporary bakcup archive is deleted
while true; do
  dest_dir=$(kdialog --title "Backup"\
    --getexistingdirectory "Select the directory where to store the backup")
  [ $? -eq 0 ] && break
  kdialog --title "Backup"\
    --yesno "Are you sure you want to abort the backup operation?"
  [ $? -eq 0 ] && rm $backup_file && exit
done

# information dialog: backup being moved
kdialog --title "Backup" --passivepopup "I'll move the backup archive for you!\
 Please don't remove the drive!\
 Btw, you can keep working, i'll tell you when i'm done."

# copy backup archive and then safely remove it, otherwhise error dialog
cp $backup_file $dest_dir
new_backup_file=$dest_dir/$(basename $backup_file)
# information dialog: backup moved successfully
[ -f $new_backup_file ] &&\
  kdialog --title "Backup" --msgbox\
  "Backup archive moved successfully, you can fint it at $new_backup_file"

echo $TODAY >> $BACKUP_HIST
rm $backup_file