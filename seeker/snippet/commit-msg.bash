#date: 2023-05-11T16:53:12Z
#url: https://api.github.com/gists/0097cb5e730b758470ddc3ae9b278181
#owner: https://api.github.com/users/tranvanhiep

#!/bin/bash
# Valid file name: commit-msg
# Rename if you download it

message_file=$1
message=$(cat $message_file)

# Match commit message generated by git merge or git pull
merge_commit_regexp="^Merge (remote-tracking )?branch .+(of .+)?into .+$"

# Ticket ID which is between non-alphanumeric characters will match
# Example: JIRA-1 message, jira-1: message, [JIRA-1] feat: message, feat(jira-1): message, etc.
ticket_id_regex="\b(JIRA|jira)-[0-9]+\b"

# Ticket ID which is in comment (start with #) will match
commented_ticket_id_regex="^#.*\b(JIRA|jira)-[0-9]+\b"

# Check if the commit message is a merge commit
is_git_merge=$(grep -oE "$merge_commit_regexp" $message_file | grep -c "")

# Do not validate merge commit
if [[ $is_git_merge == 1 ]]
then
  exit 0
fi

# Count Jira ticket ID occurrences
total_match_occurrence=$(grep -oE "$ticket_id_regex" $message_file | grep -c "")
match_occurrence_in_comment=$(grep -oE "$commented_ticket_id_regex" $message_file | grep -oE "$ticket_id_regex" | grep -c "")
number_of_ticket_id=$(($total_match_occurrence - $match_occurrence_in_comment))

# Check if there is 1 ticket ID, then it is a valid commit message
if [[ $number_of_ticket_id == 1 ]]
then
  exit 0
# Else it is an invalid commit message
else
  printf "ERROR: expect 1 Jira ticket ID in commit message, but got $number_of_ticket_id ticket ID(s) in commit message:\n%s\n" "$message"
  exit 1
fi
