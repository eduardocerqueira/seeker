#date: 2025-09-04T17:07:15Z
#url: https://api.github.com/gists/c1c6f31231c5411d44a899feaa2fec56
#owner: https://api.github.com/users/rfay

#!/bin/bash
# Generated by ChatGPT
# test-all-ddev-addons.sh
# Requires: bash, curl, jq, git, ddev
set -euo pipefail

# ---- Config you might tweak --------------------------------------------------
ADDONS_JSON_URL="https://addons.ddev.com/addons.json"
REPORT="ddev-addon-sweep-$(date +%Y%m%d-%H%M%S).md"
# -----------------------------------------------------------------------------

# ---- Preflight ----------------------------------------------------------------
need() { command -v "$1" >/dev/null 2>&1 || { echo "Missing required command: $1" >&2; exit 2; }; }
need curl; need jq; need git; need ddev

# Ensure we're in a git repo
git rev-parse --is-inside-work-tree >/dev/null 2>&1 || { echo "Not inside a git repository."; exit 2; }

# Ensure working tree starts clean
if [[ -n "$(git status --porcelain)" ]]; then
  echo "Working tree is not clean. Commit/stash before running." >&2
  exit 2
fi

# Ensure we're in a DDEV project
if ! ddev describe >/dev/null 2>&1; then
  echo "This directory doesn't look like an active DDEV project (ddev describe failed)." >&2
  echo "Initialize/start a DDEV project here before running." >&2
  exit 2
fi

# Pull titles
echo "Fetching add-on list..."
ADDONS=$(curl -fsSL "$ADDONS_JSON_URL" | jq -r '.[].title')

# ---- Report header ------------------------------------------------------------
{
  echo "# DDEV Add-on Sweep Report"
  echo
  echo "- Date: $(date)"
  echo "- Directory: $(pwd)"
  echo "- Git HEAD: $(git rev-parse --short HEAD)"
  echo "- DDEV: $(ddev version | head -n1)"
  echo "- Source: $ADDONS_JSON_URL"
  echo
  echo "| Add-on | get() | remove() | Clean after remove? | Notes |"
  echo "|--------|-------|----------|----------------------|-------|"
} > "$REPORT"

# Helper to append a fenced diff block
append_diff_block() {
  local addon="$1"
  {
    echo
    echo "#### Residual changes for \`$addon\`"
    echo
    echo "<details><summary>git status</summary>"
    echo
    echo '```text'
    git status --porcelain
    echo '```'
    echo "</details>"
    echo
    echo "<details><summary>git diff</summary>"
    echo
    echo '```diff'
    git diff --no-color
    echo '```'
    echo "</details>"
    echo
    echo "<details><summary>Untracked files</summary>"
    echo
    echo '```text'
    git ls-files --others --exclude-standard
    echo '```'
    echo "</details>"
    echo
  } >> "$REPORT"
}

# ---- Main loop ----------------------------------------------------------------
for addon in $ADDONS; do
  echo "=== $addon ==="
  get_status="❓"
  rm_status="❓"
  clean_status="❓"
  notes=""

  # Save baseline tree to compare/restore if needed
  # (We don't auto-restore, but this can help debugging)
  BASE_CLEAN="$(git status --porcelain | wc -l | tr -d ' ')"

  # Run get
  get_output=""
  if get_output=$(ddev add-on get "$addon" 2>&1); then
    get_status="✅"
  else
    get_status="❌"
    notes="get failed"
  fi

  # Run remove (even if get failed; remove should be no-op if nothing installed)
  rm_output=""
  if rm_output=$(ddev add-on remove "$addon" 2>&1); then
    rm_status="✅"
  else
    rm_status="❌"
    notes="${notes:+$notes; }remove failed"
  fi

  # Check cleanliness
  if [[ -z "$(git status --porcelain)" ]]; then
    clean_status="✅"
  else
    clean_status="❌"
    notes="${notes:+$notes; }residual changes"
  fi

  # Row in summary table
  printf "| %s | %s | %s | %s | %s |\n" "$addon" "$get_status" "$rm_status" "$clean_status" "${notes:-}" >> "$REPORT"

  # If messy, include detailed diff in the report
  if [[ "$clean_status" == "❌" ]]; then
    append_diff_block "$addon"
    # Optional: Uncomment to hard reset after capturing the diff,
    # to ensure the next iteration starts clean.
    # git reset --hard
    # git clean -fd
  fi
done

# ---- Footer -------------------------------------------------------------------
{
  echo
  echo "## Notes"
  echo "- Each add-on was tested with \`ddev add-on get <title>\` followed by \`ddev add-on remove <title>\`."
  echo "- A clean working tree means \`git status --porcelain\` was empty after removal."
  echo "- Any residual changes are included above with full diffs."
} >> "$REPORT"

echo
echo "Report written to: $REPORT"
echo "Done."
