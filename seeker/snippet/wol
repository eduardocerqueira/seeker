#date: 2025-02-10T17:04:55Z
#url: https://api.github.com/gists/57624c73c7592ceb984bee36d5985a1b
#owner: https://api.github.com/users/prossel

#!/usr/bin/env python3

# chmod +x wol
# mv wol /usr/local/bin/
# Usage: wol <MAC address>

import socket
import struct
import sys

def wake_on_lan(macaddress):
    # Check MAC address format and try to compensate.
    if len(macaddress) == 12:
        pass
    elif len(macaddress) == 12 + 5:
        sep = macaddress[2]
        macaddress = macaddress.replace(sep, '')
    else:
        raise ValueError('Incorrect MAC address format')

    # Pad the synchronization stream.
    data = ''.join(['FFFFFFFFFFFF', macaddress * 20])
    send_data = b''

    # Split up the hex values and pack.
    for i in range(0, len(data), 2):
        send_data = b''.join([send_data, struct.pack('B', int(data[i: i + 2], 16))])

    # Broadcast it to the LAN.
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
    sock.sendto(send_data, ('<broadcast>', 7))

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: wol <MAC address>")
        sys.exit(1)

    mac_address = sys.argv[1]
    wake_on_lan(mac_address)
