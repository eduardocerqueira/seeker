#date: 2025-10-27T17:06:36Z
#url: https://api.github.com/gists/74aaa5c2fd11346ed3657953cccc27ca
#owner: https://api.github.com/users/cymylau

#!/usr/bin/env python3
"""
generate_anyof_schema.py
------------------------
Generate a combined JSON Schema from one or more JSON files,
using 'anyOf' so that any input matching any of the files is valid.

Usage:
    python generate_anyof_schema.py file1.json file2.json ... > combined_schema.json
"""

import json
import sys
from genson import SchemaBuilder
from pathlib import Path


def build_schema_from_file(filepath: Path) -> dict:
    """Read a JSON file and generate a schema for it."""
    with open(filepath, "r", encoding="utf-8") as f:
        data = json.load(f)
    builder = SchemaBuilder()
    builder.add_object(data)
    return builder.to_schema()


def combine_schemas(filepaths: list[Path]) -> dict:
    """Combine multiple schemas into a single anyOf schema."""
    schemas = []
    for path in filepaths:
        schema = build_schema_from_file(path)
        schemas.append(schema)

    combined = {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "anyOf": schemas
    }
    return combined


def main():
    if len(sys.argv) < 2:
        print("Usage: python generate_anyof_schema.py file1.json [file2.json ...]", file=sys.stderr)
        sys.exit(1)

    files = [Path(arg) for arg in sys.argv[1:]]
    schema = combine_schemas(files)
    print(json.dumps(schema, indent=2))


if __name__ == "__main__":
    main()