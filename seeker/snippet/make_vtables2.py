#date: 2024-10-29T17:06:15Z
#url: https://api.github.com/gists/30c53cef5b562c9f274e47238cb62961
#owner: https://api.github.com/users/CallocGD

from pathlib import Path
from orjson import loads


def load_file(path:Path) -> dict[str, list[list[str]]]:
    return loads(Path(path).read_bytes())


def write_code(class_name:str, functions:list[str]) -> str:
    code = """
typedef struct {}_vtable {}_vtable, *P{}_vtable;

struct {}_vtable {\n""".replace("{}", class_name)
    
    # Mangle Functions and build the structure...
    for func in map(lambda f: f.replace("::", "_").replace("~","delete_"), functions):
        code += "    void* %s;\n" % func.split("(", 1)[0]
    code += "};\n"
    return code


def write_vtables():
    code = "/* Generated by make_vtable2.py version 2.0 */\n\n"

    # TODO: Request someone to merge libcocos2d stuff with these vtables...
    
    # you can get this file by running DumpVirtuals.java into ghidra from the geode-bindings but I left you a copy for 2.206
    data = load_file("vtables.json")

    for name, tables in data.items():
        for n, t in enumerate(tables):
            if n > 0:
                code += "/* %s_%i */\n" % (name, n)
                code += (write_code("%s_%i" % (name, n), t) + "\n")
            else:
                code += "/* %s */\n" % name
                code += (write_code(name, t) + "\n")
    
    with open("vtables.h", "w") as w:
        w.write(code)

if __name__ == "__main__":
    write_vtables()