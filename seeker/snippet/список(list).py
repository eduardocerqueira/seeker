#date: 2022-07-15T17:22:59Z
#url: https://api.github.com/gists/70ba599bd552083f5d1a4ee9a56f0d8a
#owner: https://api.github.com/users/bertre12

'''
Список[list]  - упорядоченные изменяемые коллекции объектов произвольных типов.

---Создание---

a = [] – через литерал (пустой список)
a = list() – через функцию list()
a = [int(i) for I in input().split()] – через генерацию списка (ввод с клавиатуры через пробел)
a = [i*I for I in range(5)] – через генерацию [0, 1, 4, 9, 16]
a = [random.randint(1, 100) for i in range(5)] – через модуль рандом

---Удаление---

del list[i] – удаление элемента по индексу i
list.remove(x) – удаление по значению x, только первое вхождение
list.clear() – удаление всех элементов в списке (будет пустой список)
list.pop()

---Объединение списков---

+ - через сложение, тогда создается новый список
extend - добавляет в существующий список

---Провека списка на принадлежность---

in - есть ли элемент в списке
not in - нет ли элемента в списке

---Копирование списка---

a.copy() - встроенный метод copy
list(a) - через встроенную функцию list()
copy.copy(a) - функция copy() из пакета copy
a[:] - через создание среза

---Методы списка---

list.append(x) - добавление элемента x в конец списка
list.insert(i, x) - добавление элемента x в указанное место i в списке
list.extend(list2) - сложение списка list к списку list2
list.remove(x) - удаление элемента из списка (первое вхождение)
list.clear() - удаление всего списка
list.copy() - копирование списка
list.count(x) - подсчет колич. элементов x в списке
list.index(x) - показывает позицию x в списке (первое вхождение)
list.pop(i) - удаляет элемент из позиции i и возвращает удаленный элемент
'''
'''
elements = [1, "meow", 3, "meow"]

print(elements.pop(1)) - meow
print(elements) - [1, 3, 'meow']
'''
'''
list.reverse() - изменение порядка в списке
reversed(list) - изменяет порядок в списке, но не меняет список
[::-1] - изменение порядка в списке
list.sort() - сортировка списка
sorted(list) - сортировка списка (по возрастанию), но не изменяет порядок
list.sort(reverse=True) - сортировка по убыванию

---Списочные вырожения---

n = []
for i in range(5):
    n.append(i)
print(n)
или равен
n = [i for i in range(5)]
print(n)

n = int(input())
lines = [int(input()) for _ in range(n)] - без int() будут слова
print(lines)
или равен
lines = [input() for _ in range(int(input()))]
print(lines)

    условия в списочном выражении

n = [i for i in range(21) if i % 2 == 0]
или
n = [i for i in range(0, 21, 2)]

    вложенные циклы

n = [i * j for i in range(1, 5) for j in range(2)]
или
n = []
for i in range(1, 5):
    for j in range(2):
        n.count(i * j)
'''

'''
len() - количество элементов в списке
+ - добавление списка к списку
* - повторение списка в n раз
sum() - сумма элементов в списке (числа)
min() - минимальный элемент списка
max() - максимальный элемент списка
'''