#date: 2021-10-08T17:16:24Z
#url: https://api.github.com/gists/293b49a8c53e6a766c397bfec24c6792
#owner: https://api.github.com/users/rahmaevao

"""
# –ü—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤ Galileosky

–°–∫—Ä–∏–ø—Ç—ã –≤ GalileoSky —É–∂–∞—Å–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–ª—å–∑—è –∏—Ö –¥–µ–ª–∞—Ç—å –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö
—Ñ–∞–π–ª–æ–≤-–º–æ–¥—É–ª–µ–π.

–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç —Ñ–∞–π–ª main –∏ –≤ –Ω–µ–º –∏—â–µ—Ç –≤—Å–µ
#include –¥–∏—Ä–µ–∫—Ç–∏–≤—ã. –ü–æ –¥–∞–Ω–Ω—ã–º –¥–∏—Ä–µ–∫—Ç–∏–≤–∞–º
—Å–∫—Ä–∏–ø—Ç –∏—â–µ—Ç –º–æ–¥—É–ª–∏ –∏ –ø—Ä–æ—Å—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –∏—Ö –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª.
–ü—Ä–∏ —ç—Ç–æ–º –∑–∞—â–∏—â–∞—è –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤–∫–ª—é—á–µ–Ω–∏–π.

–ü—Ä–æ–±–µ–≥ –ø–æ —Ñ–∞–π–ª—É –∏–¥–µ—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –∑–∞ –ø—Ä–æ–±–µ–≥ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω –Ω–∏
–æ–¥–∏–Ω #include.

–ò—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.
"""
import shutil
import os
import codecs
import pyperclip
import argparse


if __name__ == '__main__':

    main_filename = 'main.c'
    tempfilenames = []  # –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ü–µ
    include_files = set()  # –î–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤–∫–ª—é—á–µ–Ω–∏–π

    while (True):
        main_file = codecs.open(main_filename, 'r', 'utf-8')
        ret_filename = 'ret' + main_filename
        ret_file = codecs.open(ret_filename, 'w', 'utf-8')
        tempfilenames.append(ret_filename)
        for main_line in main_file:
            if (main_line.find('#include') == -1):
                ret_file.write(main_line)
            else:
                include_filename = main_line.split('"')[1]
                if include_filename in include_files:
                    continue
                else:
                    include_files.add(include_filename)
                    include_file = codecs.open(include_filename, 'r', 'utf-8')
                    for include_line in include_file:
                        ret_file.write(include_line)
                    include_file.close()

        main_file.close()
        ret_file.close()

        # –ü–æ–∏—Å–∫ –≤ —Ä–µ—Ç —Ñ–∞–π–ª–µ –¥–∏—Ä–µ–∫—Ç–∏–≤ –∏–Ω–∫–ª—é–¥ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ü–∏–∫–ª–∞
        find_include_flag = False
        ret_file = codecs.open(ret_filename, 'r', 'utf-8')
        for ret_line in ret_file:
            if (ret_line.find('#include') != -1):
                find_include_flag = True
                break
        if not find_include_flag:
            ret_file.close()
            break
        ret_file.close()
        main_filename = ret_filename


    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    global_string = ""
    main_ret_file = codecs.open(ret_filename, 'r', 'utf-8')
    for line in main_ret_file:
        global_string += line
    pyperclip.copy(global_string)
    main_ret_file.close()

    
    # –í—ã—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª–æ–≤
    parser = argparse.ArgumentParser()
    parser.add_argument ('-c', '--clear', action='store_true', default=False)
    if (not parser.parse_args().clear):
        shutil.copyfile(ret_filename, 'ret_file.c')

    for temp_file in tempfilenames:
        path = os.path.join(os.getcwd(), temp_file)
        os.remove(path)
    
    print("üíö The assembly was successful. Your code is on the clipboard. Paste it in the configurator.")
