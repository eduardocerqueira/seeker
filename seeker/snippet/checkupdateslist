#date: 2023-11-16T16:42:51Z
#url: https://api.github.com/gists/c67d200dffc0bdb5c143fade10727c9a
#owner: https://api.github.com/users/thingsiplay

#!/bin/env bash

# Check Updates List
#   Report and notify only when specific packages needs an update on Archlinux.
#
# Usage:
#   checkupdateslist [package]...
#
# Example:
#   $ checkupdateslist
#   $ checkupdateslist yt-dlp retroarch
#   $ checkupdateslist "*pipewire*"
#
# Required programs:
#   checkupdates notify-send grep awk wc tr
#
# On Arch:
# - checkupdates from package extra/pacman-contrib
# - notify-send from package extra/libnotify

# Default list of packages to check. The package names should match exactly.
# Multiple packages are separated by space. Any given arguments to the script
# will overwrite the default.
packages='pacman yay firefox thunderbird retroarch'

# Time in millesconds until notify message disappears.
#   "" = (empty) do not display notification
#   0 = does not disappear automatically
#   15000 = 15 seconds
# expire_ms=""
expire_ms="15000"

if [[ "${#}" -gt 0 ]]; then
	packages="${*}"
fi

if [[ "${packages}" =~ [^a-zA-Z0-9*\ \-] ]]; then
	echo 'Only a-z, A-Z, 0-9, space, dash and star as a wildcard characters' \
		'allowed for list of package names.'
	exit 3
fi

if [[ "${expire_ms}" =~ [^0-9] ]]; then
	echo 'Only digits are allowed for expiration time.'
	exit 3
fi

# Prepare list as an extended regex for grep.
packages="${packages// /|}"
packages="${packages//\*/.*}"

# To test output, replace below `checkupdates` with `yay -Q` temporarily.
updateslist="$(checkupdates |
	awk '{print $1}' |
	grep -E "^(${packages})$")"

count="$(echo -n "${updateslist}" | wc -w)"

if [[ "${count}" -gt 0 ]]; then
	if [ "${expire_ms}" != "" ]; then
		title="${0##*/}"
		notify-send -a "${title}" \
			-t "${expire_ms}" \
			"${count} important update(s) available:" "${updateslist}" || exit 5
	fi
	echo "${updateslist}"
fi

exit 0